name: Java CI with Maven, SonarCloud, Docker and Azure

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build with Maven
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ["17"]

    steps:
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java}}
          distribution: "adopt"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Package with Maven
        run: ./mvnw -B package -DskipTests

  test:
    name: Unit Tests
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: checkout code
        uses: actions/checkout@v2

      - name: Run tests and generate report
        run: |
          ./mvnw test
          ./mvnw surefire-report:report
      
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: target/surefire-reports


  sonarcloud:
    name: SonarCloud Analysis
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Run SonarCloud analysis
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'
          server-id: 'github'
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GITHUB_TOKEN }}
          overwrite-settings: true
          job-status: 'success'

      - name: Run SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=EmoSense_OpsPaws

  docker:
    name: Docker Image Build and Push to Hub
    needs: [build, test, sonarcloud]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: deelee333
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build, Tag, and Push Docker image to Docker hub
        run: |
          docker build -t deelee333/pet_clinic_project .
          docker tag deelee333/pet_clinic_project deelee333/pet_clinic_project:latest
          docker push deelee333/pet_clinic_project:latest
          echo "Image pushed to Docker Hub"

  

  docker_deploy:
    name: Deploy Docker Container
    needs: docker
    runs-on: ubuntu-latest


    steps:
      - name: Start Docker Container
        run: |
          docker stop pet_clinic_container || true
          docker rm pet_clinic_container || true
          docker run --name pet_clinic_container -d -p 8080:8080 deelee333/pet_clinic_project:latest
          echo "Container Initialised"

      - name: Wait for Container to Start
        run: |
          sleep 30
          echo "Container Started"

      - name: Pull Image from Hub to Container
        run: |
          docker exec pet_clinic_container docker pull deelee333/pet_clinic_project:latest
          echo "Image Pulled"

      - name: Run Container Image
        run: |
          docker exec pet_clinic_container docker run deelee333/pet_clinic_project:latest
          echo "Container Image Running"
